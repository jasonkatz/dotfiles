cd() {
    builtin cd "$@"
    count=$(ls | wc -l);
    if [ $count -lt 100 ]
    then
        ls;
    fi
}

txdev() {
    local DIR=`pwd`

    tmux start-server
    tmux new-session -d -s $1
    tmux split-window -h -c $DIR
    tmux rename-window 'edit'
    tmux new-window -c $DIR
    tmux split-window -h -c $DIR
    tmux rename-window 'build'
    tmux new-window -c $DIR
    tmux split-window -h -c $DIR
    tmux rename-window 'git'
    tmux select-window -t 'git'
    tmux attach-session -t $1
}

txdc() {
    if [ -z ${TMUX+x} ]; then
        echo "Must be run in a tmux session"
        return
    fi

    if [ ! -f docker-compose.yaml ] && [ ! -f docker-compose.yml ]; then
        echo "No docker-compose.yaml or docker-compose.yml file found"
        return
    fi

    local DIR=`pwd`
    local MAIN_CONTAINER=${1:-`basename $DIR`}

    tmux new-window -a -c $DIR
    tmux rename-window 'docker'

    tmux send-keys 'dcu -d; tmux wait-for -S dcu' Enter\; wait-for dcu

    tmux split-window -h -p 70
    tmux send-keys 'dca ' $MAIN_CONTAINER Enter

    tmux split-window -v
    tmux send-keys 'dca ' $MAIN_CONTAINER Enter

    tmux split-window -v -f -p 45
    tmux send-keys 'dcl' Enter

    tmux split-window -v
    tmux send-keys 'docker-compose ps -q | xargs docker stats' Enter

    tmux select-pane -t 1

    echo "Success"
}

dca() {
    docker-compose exec $1 bash
}

buffer() {
    cat $1 > ~/public_html/text
}

reinstall() {
    bash ~/toolkit/uninstall.sh
    printf "\n---------------------------\n\n"
    bash ~/toolkit/install.sh
    printf "\n---------------------------\n\n"
    reload
}

start_agent() {
    printf "\nInitializing new SSH agent..."
    SSH_ENV="$HOME/.ssh/environment"
    /usr/bin/ssh-agent | sed 's/^echo/#echo/' > "${SSH_ENV}"
    echo succeeded
    chmod 600 "${SSH_ENV}"
    . "${SSH_ENV}" > /dev/null
    /usr/bin/ssh-add
}

startup() {
    if [ -f "${SSH_ENV}" ]; then
        . "${SSH_ENV}" > /dev/null
        ps -ef | grep ${SSH_AGENT_PID} | grep ssh-agent$ > /dev/null || {
            start_agent;
        }
    else
        start_agent;
    fi

    stty -ixon
}
